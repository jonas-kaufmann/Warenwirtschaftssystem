// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Warenwirtschaftssystem.Model.Db;

namespace Warenwirtschaftssystem.Migrations
{
    [DbContext(typeof(DbModel))]
    partial class DbModelModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("ArticleColor", b =>
                {
                    b.Property<int>("ArticlesId")
                        .HasColumnType("int");

                    b.Property<int>("ColorsId")
                        .HasColumnType("int");

                    b.HasKey("ArticlesId", "ColorsId");

                    b.HasIndex("ColorsId");

                    b.ToTable("ArticleColor");
                });

            modelBuilder.Entity("ArticleDefect", b =>
                {
                    b.Property<int>("ArticlesId")
                        .HasColumnType("int");

                    b.Property<int>("DefectsId")
                        .HasColumnType("int");

                    b.HasKey("ArticlesId", "DefectsId");

                    b.HasIndex("DefectsId");

                    b.ToTable("ArticleDefect");
                });

            modelBuilder.Entity("ArticleDocument", b =>
                {
                    b.Property<int>("ArticlesId")
                        .HasColumnType("int");

                    b.Property<int>("DocumentsId")
                        .HasColumnType("int");

                    b.HasKey("ArticlesId", "DocumentsId");

                    b.HasIndex("DocumentsId");

                    b.ToTable("ArticleDocument");
                });

            modelBuilder.Entity("ArticleMaterial", b =>
                {
                    b.Property<int>("ArticlesId")
                        .HasColumnType("int");

                    b.Property<int>("MaterialsId")
                        .HasColumnType("int");

                    b.HasKey("ArticlesId", "MaterialsId");

                    b.HasIndex("MaterialsId");

                    b.ToTable("ArticleMaterial");
                });

            modelBuilder.Entity("DocumentSavedArticleAttributes", b =>
                {
                    b.Property<int>("DocumentsId")
                        .HasColumnType("int");

                    b.Property<int>("SavedArticleAttributesId")
                        .HasColumnType("int");

                    b.HasKey("DocumentsId", "SavedArticleAttributesId");

                    b.HasIndex("SavedArticleAttributesId");

                    b.ToTable("DocumentSavedArticleAttributes");
                });

            modelBuilder.Entity("Warenwirtschaftssystem.Model.Db.Article", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("AddedToSortiment")
                        .HasColumnType("datetime2");

                    b.Property<bool>("AsNew")
                        .HasColumnType("bit");

                    b.Property<int?>("BrandId")
                        .HasColumnType("int");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EnteredFinalState")
                        .HasColumnType("datetime2");

                    b.Property<int?>("GenderId")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PartsId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PickUp")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("SizeId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("SubCategoryId")
                        .HasColumnType("int");

                    b.Property<int?>("SupplierId")
                        .HasColumnType("int");

                    b.Property<decimal>("SupplierProportion")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("GenderId");

                    b.HasIndex("PartsId");

                    b.HasIndex("SizeId");

                    b.HasIndex("SubCategoryId");

                    b.HasIndex("SupplierId");

                    b.ToTable("Articles");
                });

            modelBuilder.Entity("Warenwirtschaftssystem.Model.Db.ArticleReservation", b =>
                {
                    b.Property<int>("ArticleId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("From")
                        .HasColumnType("datetime2");

                    b.Property<int?>("SupplierId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Until")
                        .HasColumnType("datetime2");

                    b.HasKey("ArticleId");

                    b.HasIndex("SupplierId");

                    b.ToTable("ArticleReservations");
                });

            modelBuilder.Entity("Warenwirtschaftssystem.Model.Db.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Brands");
                });

            modelBuilder.Entity("Warenwirtschaftssystem.Model.Db.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Warenwirtschaftssystem.Model.Db.Color", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ColorCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Colors");
                });

            modelBuilder.Entity("Warenwirtschaftssystem.Model.Db.Defect", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Defects");
                });

            modelBuilder.Entity("Warenwirtschaftssystem.Model.Db.Document", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("DocumentType")
                        .HasColumnType("int");

                    b.Property<int?>("SupplierId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SupplierId");

                    b.ToTable("Documents");
                });

            modelBuilder.Entity("Warenwirtschaftssystem.Model.Db.Gender", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Short")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Genders");
                });

            modelBuilder.Entity("Warenwirtschaftssystem.Model.Db.Material", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Materials");
                });

            modelBuilder.Entity("Warenwirtschaftssystem.Model.Db.Parts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Parts");
                });

            modelBuilder.Entity("Warenwirtschaftssystem.Model.Db.SavedArticleAttributes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("ArticleId")
                        .HasColumnType("int");

                    b.Property<decimal>("Payout")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ArticleId");

                    b.ToTable("SavedArticleAttributes");
                });

            modelBuilder.Entity("Warenwirtschaftssystem.Model.Db.Setting", b =>
                {
                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Key");

                    b.ToTable("Settings");
                });

            modelBuilder.Entity("Warenwirtschaftssystem.Model.Db.Size", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Sizes");
                });

            modelBuilder.Entity("Warenwirtschaftssystem.Model.Db.SubCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("SubCategories");
                });

            modelBuilder.Entity("Warenwirtschaftssystem.Model.Db.Supplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Company")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EMail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PickUp")
                        .HasColumnType("int");

                    b.Property<string>("Place")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Postcode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("SupplierProportion")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)");

                    b.Property<int>("Title")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("Warenwirtschaftssystem.Model.Db.SupplierProportion", b =>
                {
                    b.Property<decimal>("FromPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Proportion")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)");

                    b.HasKey("FromPrice");

                    b.ToTable("SupplierProportions");
                });

            modelBuilder.Entity("ArticleColor", b =>
                {
                    b.HasOne("Warenwirtschaftssystem.Model.Db.Article", null)
                        .WithMany()
                        .HasForeignKey("ArticlesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Warenwirtschaftssystem.Model.Db.Color", null)
                        .WithMany()
                        .HasForeignKey("ColorsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ArticleDefect", b =>
                {
                    b.HasOne("Warenwirtschaftssystem.Model.Db.Article", null)
                        .WithMany()
                        .HasForeignKey("ArticlesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Warenwirtschaftssystem.Model.Db.Defect", null)
                        .WithMany()
                        .HasForeignKey("DefectsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ArticleDocument", b =>
                {
                    b.HasOne("Warenwirtschaftssystem.Model.Db.Article", null)
                        .WithMany()
                        .HasForeignKey("ArticlesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Warenwirtschaftssystem.Model.Db.Document", null)
                        .WithMany()
                        .HasForeignKey("DocumentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ArticleMaterial", b =>
                {
                    b.HasOne("Warenwirtschaftssystem.Model.Db.Article", null)
                        .WithMany()
                        .HasForeignKey("ArticlesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Warenwirtschaftssystem.Model.Db.Material", null)
                        .WithMany()
                        .HasForeignKey("MaterialsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DocumentSavedArticleAttributes", b =>
                {
                    b.HasOne("Warenwirtschaftssystem.Model.Db.Document", null)
                        .WithMany()
                        .HasForeignKey("DocumentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Warenwirtschaftssystem.Model.Db.SavedArticleAttributes", null)
                        .WithMany()
                        .HasForeignKey("SavedArticleAttributesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Warenwirtschaftssystem.Model.Db.Article", b =>
                {
                    b.HasOne("Warenwirtschaftssystem.Model.Db.Brand", "Brand")
                        .WithMany("Articles")
                        .HasForeignKey("BrandId");

                    b.HasOne("Warenwirtschaftssystem.Model.Db.Category", "Category")
                        .WithMany("Articles")
                        .HasForeignKey("CategoryId");

                    b.HasOne("Warenwirtschaftssystem.Model.Db.Gender", "Gender")
                        .WithMany("Articles")
                        .HasForeignKey("GenderId");

                    b.HasOne("Warenwirtschaftssystem.Model.Db.Parts", "Parts")
                        .WithMany("Articles")
                        .HasForeignKey("PartsId");

                    b.HasOne("Warenwirtschaftssystem.Model.Db.Size", "Size")
                        .WithMany("Articles")
                        .HasForeignKey("SizeId");

                    b.HasOne("Warenwirtschaftssystem.Model.Db.SubCategory", "SubCategory")
                        .WithMany("Articles")
                        .HasForeignKey("SubCategoryId");

                    b.HasOne("Warenwirtschaftssystem.Model.Db.Supplier", "Supplier")
                        .WithMany("Articles")
                        .HasForeignKey("SupplierId");

                    b.Navigation("Brand");

                    b.Navigation("Category");

                    b.Navigation("Gender");

                    b.Navigation("Parts");

                    b.Navigation("Size");

                    b.Navigation("SubCategory");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("Warenwirtschaftssystem.Model.Db.ArticleReservation", b =>
                {
                    b.HasOne("Warenwirtschaftssystem.Model.Db.Article", "Article")
                        .WithOne("Reservation")
                        .HasForeignKey("Warenwirtschaftssystem.Model.Db.ArticleReservation", "ArticleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Warenwirtschaftssystem.Model.Db.Supplier", "Supplier")
                        .WithMany("Reservations")
                        .HasForeignKey("SupplierId");

                    b.Navigation("Article");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("Warenwirtschaftssystem.Model.Db.Document", b =>
                {
                    b.HasOne("Warenwirtschaftssystem.Model.Db.Supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierId");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("Warenwirtschaftssystem.Model.Db.SavedArticleAttributes", b =>
                {
                    b.HasOne("Warenwirtschaftssystem.Model.Db.Article", "Article")
                        .WithMany()
                        .HasForeignKey("ArticleId");

                    b.Navigation("Article");
                });

            modelBuilder.Entity("Warenwirtschaftssystem.Model.Db.SubCategory", b =>
                {
                    b.HasOne("Warenwirtschaftssystem.Model.Db.Category", "Category")
                        .WithMany("SubCategories")
                        .HasForeignKey("CategoryId");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Warenwirtschaftssystem.Model.Db.Article", b =>
                {
                    b.Navigation("Reservation");
                });

            modelBuilder.Entity("Warenwirtschaftssystem.Model.Db.Brand", b =>
                {
                    b.Navigation("Articles");
                });

            modelBuilder.Entity("Warenwirtschaftssystem.Model.Db.Category", b =>
                {
                    b.Navigation("Articles");

                    b.Navigation("SubCategories");
                });

            modelBuilder.Entity("Warenwirtschaftssystem.Model.Db.Gender", b =>
                {
                    b.Navigation("Articles");
                });

            modelBuilder.Entity("Warenwirtschaftssystem.Model.Db.Parts", b =>
                {
                    b.Navigation("Articles");
                });

            modelBuilder.Entity("Warenwirtschaftssystem.Model.Db.Size", b =>
                {
                    b.Navigation("Articles");
                });

            modelBuilder.Entity("Warenwirtschaftssystem.Model.Db.SubCategory", b =>
                {
                    b.Navigation("Articles");
                });

            modelBuilder.Entity("Warenwirtschaftssystem.Model.Db.Supplier", b =>
                {
                    b.Navigation("Articles");

                    b.Navigation("Reservations");
                });
#pragma warning restore 612, 618
        }
    }
}
